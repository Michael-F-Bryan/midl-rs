use crate::syntax::ast::{span, Quote, Type, Comment};

grammar;

pub Quote: Quote = {
    <l:@L> "cpp_quote" "(" <s:string_literal> ")" <r:@R> => Quote::new(s, span(l, r))
};

pub Comment: Comment = {
    <l:@L> <s:r"//*[^\n]*"> <r:@R> => Comment::new(s[2..].trim_left().to_string(), span(l, r))
};

pub Type: Type = {
    "unsigned" "long" => Type::UnsignedLong,
    "long" => Type::Long,
    r"[\w_][\w\d_]*" => Type::Other(<>.to_string()),
};

string_literal: String = {
    <s:r#""(?:[^"\\]|\\.)*""#> => s[1..s.len()-1].to_string()
};